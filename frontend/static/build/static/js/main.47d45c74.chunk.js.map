{"version":3,"sources":["components/Title.js","containers/Aside.js","components/Login.js","components/Signup.js","containers/ProfileCreate.js","components/ProfileDetails.js","containers/Map.js","components/Base.js","serviceWorker.js","index.js"],"names":["Title","href","Component","Aside","axios","defaults","xsrfCookieName","xsrfHeaderName","Login","props","state","username","email","password","handleSubmit","bind","handleChange","e","preventDefault","post","this","then","res","localStorage","setItem","JSON","stringify","data","history","push","catch","error","console","log","setState","target","name","value","onSubmit","htmlFor","id","type","onChange","placeholder","required","SignUp","password1","password2","ProfileCreate","avatar","preview","profile","created_by","handleAvatarChange","checked","file","files","reader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","headers","image","get","Fragment","className","src","alt","common","parse","getItem","token","ProfileDetails","styles","require","MyMap","restaurant","userLocation","lat","lng","loading","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","google","defaultZoom","defaultCenter","defaultOptions","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","WrappedMap","withScriptjs","withGoogleMap","Map","style","width","height","googleMapURL","loadingElement","containerElement","mapElement","Base","children","Boolean","window","location","hostname","match","ReactDOM","render","path","component","exact","rel","integrity","crossOrigin","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"gsDAmBeA,G,uLAXX,OACE,6BACE,6CACA,+CACA,uBAAGC,KAAK,WAAR,WACA,uBAAGA,KAAK,YAAR,gB,GARYC,cCcLC,E,iLAZX,OACE,6BACE,6CACA,qCACA,yCACA,mD,GARYD,a,iCCDpBE,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAwDjBC,E,YApDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,0EAaNE,GAAI,IAAD,OACdA,EAAEC,iBAEFd,IAAMe,KAAK,2BAA4BC,KAAKV,OAC3CW,MAAK,SAAAC,GACFC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUJ,EAAIK,OACvD,EAAKlB,MAAMmB,QAAQC,KAAK,gBAE3BC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,mCAILd,GACXG,KAAKc,SAAL,eAAgBjB,EAAEkB,OAAOC,KAAOnB,EAAEkB,OAAOE,U,+BAKzC,OACE,0BAAMC,SAAUlB,KAAKN,cACnB,2BACE,2BAAOyB,QAAQ,YAAf,YACA,2BAAOC,GAAG,WAAWC,KAAK,OAAOL,KAAK,WAAWC,MAAOjB,KAAKV,MAAMC,SAAU+B,SAAUtB,KAAKJ,aAAc2B,YAAY,iBAAiBC,UAAQ,KAEjJ,2BACE,2BAAOL,QAAQ,SAAf,SACA,2BAAOC,GAAG,QAAQC,KAAK,QAAQL,KAAK,QAAQC,MAAOjB,KAAKV,MAAME,MAAO8B,SAAUtB,KAAKJ,aAAc2B,YAAY,cAAcC,UAAQ,KAEtI,2BACE,2BAAOL,QAAQ,YAAf,YACA,2BAAOC,GAAG,WAAWC,KAAK,WAAWL,KAAK,WAAWC,MAAOjB,KAAKV,MAAMG,SAAU6B,SAAUtB,KAAKJ,aAAc2B,YAAY,iBAAiBC,UAAQ,KAErJ,8C,GAhDY1C,aCHpBE,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IA6DjBsC,E,YAzDb,WAAYpC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPkC,UAAW,GACXC,UAAW,IAGb,EAAKjC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,0EAcNE,GAAI,IAAD,OACdA,EAAEC,iBAEFd,IAAMe,KAAK,kCAAmCC,KAAKV,OAClDW,MAAK,SAAAC,GACFC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUJ,EAAIK,OACvD,EAAKlB,MAAMmB,QAAQC,KAAK,uBAE3BC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,mCAILd,GACXG,KAAKc,SAAL,eAAgBjB,EAAEkB,OAAOC,KAAOnB,EAAEkB,OAAOE,U,+BAKzC,OACE,0BAAMC,SAAUlB,KAAKN,cACnB,2BACE,2BAAOyB,QAAQ,YAAf,YACA,2BAAOC,GAAG,WAAWC,KAAK,OAAOL,KAAK,WAAWC,MAAOjB,KAAKV,MAAMC,SAAU+B,SAAUtB,KAAKJ,aAAc2B,YAAY,iBAAiBC,UAAQ,KAEjJ,2BACE,2BAAOL,QAAQ,SAAf,SACA,2BAAOC,GAAG,QAAQC,KAAK,QAAQL,KAAK,QAAQC,MAAOjB,KAAKV,MAAME,MAAO8B,SAAUtB,KAAKJ,aAAc2B,YAAY,cAAcC,UAAQ,KAEtI,2BACE,2BAAOL,QAAQ,YAAf,YACA,2BAAOC,GAAG,WAAWC,KAAK,WAAWL,KAAK,YAAYC,MAAOjB,KAAKV,MAAMG,SAAU6B,SAAUtB,KAAKJ,aAAc2B,YAAY,iBAAiBC,UAAQ,KAEtJ,2BACE,2BAAOL,QAAQ,YAAf,cACA,2BAAOC,GAAG,YAAYC,KAAK,WAAWL,KAAK,YAAYC,MAAOjB,KAAKV,MAAMqC,UAAWL,SAAUtB,KAAKJ,aAAc2B,YAAY,uBAAuBC,UAAQ,KAE9J,gD,GArDa1C,a,SCFrBE,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAyGjByC,E,YArGb,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACX0B,KAAM,GACNa,OAAQ,KACRC,QAAS,GAETC,QAAS,GACTC,WAAY,IAGd,EAAKpC,aAAe,EAAKA,aAAaD,KAAlB,gBAEpB,EAAKsC,mBAAqB,EAAKA,mBAAmBtC,KAAxB,gBAC1B,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBAfH,E,0EAmBNE,GACXe,QAAQC,IAAIhB,EAAEkB,OAAOmB,SACrBlC,KAAKc,SAAL,eAAgBjB,EAAEkB,OAAOC,KAAOnB,EAAEkB,OAAOE,U,2CAGtBpB,GACnBG,KAAKc,SAAL,eAAgBjB,EAAEkB,OAAOC,KAAOnB,EAAEkB,OAAOmB,Y,yCAGxBrC,GAAI,IAAD,OAChBsC,EAAOtC,EAAEkB,OAAOqB,MAAM,GAC1BpC,KAAKc,SAAS,CAACe,OAAQM,IAEvB,IAAIE,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjB,EAAKzB,SAAS,CAACgB,QAASO,EAAOG,UAEjCH,EAAOI,cAAcN,K,mCAGVtC,GAAI,IAAD,OACdA,EAAEC,iBAEF,IAAI4C,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ5C,KAAKV,MAAM0B,MACnC0B,EAASE,OAAO,SAAU5C,KAAKV,MAAMuC,QAKrC7C,IAAMe,KAAK,0BAA2B2C,EAAU,CAC9CG,QAAU,CACR,eAAgB,yBAGnB5C,MAAK,SAAAC,GACJ,IAAI6B,EAAO,YAAO,EAAKzC,MAAMyC,SAC7B,EAAKjB,SAAS,CAACiB,QAASA,EAASf,KAAK,GAAIc,QAAS,KAAMgB,MAAO,KAAMd,WAAW,KAEjF,EAAK3C,MAAMmB,QAAQC,KAAK,gBAEzBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,0CAIO,IAAD,OAClB3B,IAAM+D,IAAI,2BACX9C,MAAK,SAAAC,GACJU,QAAQC,IAAIX,GACZ,EAAKY,SAAS,CAACiB,QAAS7B,EAAIK,UAE7BG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAMd,OADAC,QAAQC,IAAIb,KAAKV,OAEf,kBAAC,IAAM0D,SAAP,KACE,6BAASC,UAAU,iBACjB,0BAAM/B,SAAUlB,KAAKN,cACrB,kDACA,8CACA,2BAAO2B,KAAK,OAAOL,KAAK,OAAOC,MAAOjB,KAAKV,MAAM0B,KAAMM,SAAUtB,KAAKJ,eACtE,6CACCI,KAAKV,MAAMuC,OACV,yBAAKqB,IAAKlD,KAAKV,MAAMwC,QAASqB,IAAI,YAElC,2BAAO9B,KAAK,OAAOL,KAAK,SAASM,SAAUtB,KAAKiC,qBAIlD,+C,GA/FkBnD,aCH5BE,IAAMC,SAAS4D,QAAQO,OAAvB,8BAA0D/C,KAAKgD,MAAMlD,aAAamD,QAAQ,gBAAgBC,O,IAqC3FC,E,YAlCb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXyC,QAAS,IAJM,E,iFASE,IAAD,OAIlB/C,IAAM+D,IAAI,2BACT9C,MAAK,SAAAC,GACF,EAAKY,SAAS,CAACiB,QAAS7B,EAAIK,KAAK,QAEpCG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAKd,OACE,6BAASsC,UAAU,iBACjB,4BAAKjD,KAAKV,MAAMyC,QAAQf,MACxB,yBAAKkC,IAAKlD,KAAKV,MAAMyC,QAAQF,OAAQsB,IAAI,KACzC,0D,GA5BqBrE,a,iBCDvB2E,EAASC,EAAQ,KAGjBC,E,YACF,WAAYtE,GAAQ,IAAD,8BACnB,4CAAMA,KAEDC,MAAQ,CACXsE,WAAY,GACZC,aAAc,CAAEC,IAAK,GAAIC,IAAK,IAC9BC,SAAS,GANQ,E,+EASH3E,GAAQ,IAAD,OACvB4E,UAAUC,YAAYC,oBACpB,SAAAC,GAAa,IAAD,EACsBA,EAASC,OAAjCC,EADE,EACFA,SAAUC,EADR,EACQA,UAElB,EAAKzD,SAAS,CACZ+C,aAAc,CAAEC,IAAKQ,EAAUP,IAAKQ,GACpCP,SAAS,OAGb,WACE,EAAKlD,SAAS,CAAEkD,SAAS,S,+BAKrB,IAAD,EAC2BhE,KAAKV,MAA/B0E,EADD,EACCA,QAASH,EADV,EACUA,aACE7D,KAAKX,MAAhBmF,OAER,OAAIR,EACK,KAGL,kBAAC,YAAD,CACAS,YAAa,GACbC,cAAgBb,EAChBc,eAAgB,CACdC,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBC,cAAc,EACdC,aAAa,EACbvB,OAAQA,IAER,kBAAC,SAAD,CAAQW,SAAYP,S,GA7CV/E,aAwDdmG,EAAaC,uBAAaC,wBAAcxB,IAE/B,SAASyB,IAEpB,OACI,yBAAKC,MAAO,CAAEC,MAAM,QAASC,OAAO,UAEhC,kBAACN,EAAD,CACIO,aAAY,gIACZC,eAAgB,yBAAKJ,MAAO,CAACE,OAAQ,WACrCG,iBAAkB,yBAAKL,MAAO,CAACE,OAAQ,WACvCI,WAAa,yBAAKN,MAAO,CAACE,OAAQ,cCnDnCK,MAhBf,SAAcvG,GACZ,OAEE,0BAAM4D,UAAU,mBAChB,6BAASA,UAAU,WACjB,kBAACmC,EAAD,OAEA,6BAASnC,UAAU,OACjB,yBAAKA,UAAU,gCACd5D,EAAMwG,aCLKC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qBCJNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,KACM,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAW1E,IAC1C,kBAAC,IAAD,CAAOyE,KAAK,YAAYC,UAAW9C,IACnC,kBAAC,IAAD,CAAO6C,KAAK,UAAUC,UAAWlH,IACjC,kBAAC,IAAD,CAAOiH,KAAK,WAAWC,UAAW7E,IAClC,kBAAC,IAAD,CAAO4E,KAAK,WAAWC,UAAWvH,IAClC,kBAAC,IAAD,CAAOwH,OAAK,EAACF,KAAK,IAAIC,UAAW1H,MAGzC,0BAAM4H,IAAI,aAAa3H,KAAK,wEAAwE4H,UAAU,0EAA0EC,YAAY,eAEpMC,SAASC,eAAe,SDqGtB,kBAAmB3C,WACrBA,UAAU4C,cAAcC,MAAM7G,MAAK,SAAA8G,GACjCA,EAAaC,iB","file":"static/js/main.47d45c74.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n// import axios from 'axios';\nimport '../Aside.css';\n\n\nclass Title extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Shut Up & Eat</h1>\n        <button>Click Here!</button>\n        <a href='/login/'>Sign In</a>\n        <a href='/signup/'>Sign up</a>\n      </div>\n    )\n  }\n}\n\nexport default Title;\n","import React, {Component} from \"react\";\nimport '../Aside.css';\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nclass Aside extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Shut Up & Eat</h1>\n        <p>Avatar</p>\n        <p>Users Name</p>\n        <p>Profile Details</p>\n\n      </div>\n    )\n  }\n}\n\nexport default Aside;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/login/', this.state)\n    .then(res => {\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/profile/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n    return  (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label htmlFor=\"username\">Username</label>\n          <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n        </p>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password' type='password' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <button>Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/registration/', this.state)\n    .then(res => {\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/profile/create/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n    return  (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label htmlFor=\"username\">Username</label>\n          <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n        </p>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password' type='password' name='password1' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password 2</label>\n          <input id='password2' type='password' name='password2' value={this.state.password2} onChange={this.handleChange} placeholder='Enter password again' required/>\n        </p>\n        <button>Sign Up</button>\n      </form>\n    )\n  }\n}\n\nexport default SignUp;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport '../Aside.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass ProfileCreate extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      avatar: null,\n      preview: '',\n      // preferences: false,\n      profile: [],\n      created_by: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.handleAvatarChange = this.handleAvatarChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange(e) {\n    console.log(e.target.checked)\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleCheckboxChange(e) {\n    this.setState({[e.target.name]: e.target.checked});\n  }\n\n  handleAvatarChange(e) {\n    let file = e.target.files[0];\n    this.setState({avatar: file});\n\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({preview: reader.result});\n    };\n    reader.readAsDataURL(file);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append('name', this.state.name);\n    formData.append('avatar', this.state.avatar);\n    // formData.append('preferences', this.state.preferences);\n\n\n\n    axios.post('/api/v1/profile/create/', formData, {\n      headers : {\n        'content-type': 'multipart/form-data'\n      }\n    })\n    .then(res => {\n      let profile = [...this.state.profile];\n      this.setState({profile: profile, name:'', preview: null, image: null, created_by:''});\n\n      this.props.history.push('/profile/');\n    })\n    .catch(error =>{\n      console.log(error);\n    });\n  }\n\n    componentDidMount() {\n      axios.get('/api/v1/profile/create/')\n    .then(res => {\n      console.log(res);\n      this.setState({profile: res.data});\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n  render(){\n\n    console.log(this.state);\n    return (\n      <React.Fragment>\n        <section className='aside-content'>\n          <form onSubmit={this.handleSubmit}>\n          <p>Create Your Profile</p>\n          <p>Enter Your Name</p>\n          <input type='text' name='name' value={this.state.name} onChange={this.handleChange}/>\n          <p>Add a picture!</p>\n          {this.state.avatar ? (\n            <img src={this.state.preview} alt='preview'/>\n          ):(\n            <input type='file' name='avatar' onChange={this.handleAvatarChange}/>\n          )}\n\n\n          <button>Save</button>\n          </form>\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ProfileCreate;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport '../Aside.css';\n\naxios.defaults.headers.common['Authorization'] = `Token ${JSON.parse(localStorage.getItem('my-app-user')).token}`;\n\nclass ProfileDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: {},\n\n    };\n  }\n\n  componentDidMount() {\n    // let p = window.location.pathname.split('/');\n    // console.log(p);\n\n    axios.get('/api/v1/profile/detail/')\n    .then(res => {\n        this.setState({profile: res.data[0]})\n    })\n    .catch(error =>{\n      console.log(error);\n    });\n  }\n\n  render(){\n    return (\n      <section className='aside-content'>\n        <h1>{this.state.profile.name}</h1>\n        <img src={this.state.profile.avatar} alt='' />\n        <p>Prefences Place Holder</p>\n\n      </section>\n    );\n  };\n}\n\nexport default ProfileDetails;\n","import React, {Component} from \"react\";\n// import axios from 'axios';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\n\n// Import custom styles to customize the style of Google Map\nconst styles = require('./GoogleMapStyles.json')\n\n\nclass MyMap extends Component {\n    constructor(props) {\n    super(props);\n\n    this.state = {\n      restaurant: [],\n      userLocation: { lat: 32, lng: 32},\n      loading: true,\n    };\n  }\n  componentDidMount(props) {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const { latitude, longitude } = position.coords;\n\n        this.setState({\n          userLocation: { lat: latitude, lng: longitude },\n          loading: false\n        });\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  render() {\n    const { loading, userLocation } = this.state;\n    const { google } = this.props;\n\n    if (loading) {\n      return null;\n    }\n    return (\n        <GoogleMap\n        defaultZoom={15}\n        defaultCenter={ userLocation }\n        defaultOptions={{\n          disableDefaultUI: true,\n          draggable: true,\n          keyboardShortcuts: false,\n          scaleControl: true,\n          scrollwheel: true,\n          styles: styles}}\n        >\n          <Marker position= { userLocation } />\n        </GoogleMap>\n\n\n    )\n  }\n}\n//\n//\n//\n//\nconst WrappedMap = withScriptjs(withGoogleMap(MyMap));\n\nexport default function Map(){\n\n    return(\n        <div style={{ width:\"100vw\", height:\"100vh\" }}>\n\n            <WrappedMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBm5r5sZESK6Jo8pWiLFjkGvpGJ010ED9I`}\n                loadingElement={<div style={{height: \"100% \"}} />}\n                containerElement={<div style={{height: \"100% \"}} />}\n                mapElement ={<div style={{height: \"100% \"}} />}\n\n                />\n        </div>\n    )\n}\n","import React from 'react';\nimport '../Base.css';\nimport Map from '../containers/Map';\n\nimport '../Aside.css';\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nfunction Base(props) {\n  return (\n\n    <main className='container-fluid'>\n    <section className='row map'>\n      <Map />\n    </section>\n      <section className='row'>\n        <div className='col-md-3 col-sm-12 aside-box'>\n        {props.children}\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default Base;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Title from './components/Title'\nimport Aside from './containers/Aside';\nimport Login from './components/Login';\nimport SignUp from './components/Signup';\nimport ProfileCreate from './containers/ProfileCreate';\nimport ProfileDetails from './components/ProfileDetails';\nimport Base from './components/Base';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Base>\n          <Switch>\n            <Route path='/profile/create/' component={ProfileCreate} />\n            <Route path='/profile/' component={ProfileDetails} />\n            <Route path='/login/' component={Login} />\n            <Route path='/signup/' component={SignUp} />\n            <Route path='/result/' component={Aside} />\n            <Route exact path='/' component={Title} />\n          </Switch>\n    </Base>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossOrigin=\"anonymous\"/>\n  </Router>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}